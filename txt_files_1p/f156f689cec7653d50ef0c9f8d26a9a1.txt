03/05/2016

Introduction to CL

Class Agenda

Formal languages

RegExp, FSA, 

Phonetics

Morphology 

Syntax  (3/6)

Semantics

Human speech production

FST, Mental Lexicon

CFG, POS tagging, parsing

compositional semantics, 
reference, quantification

Pragmatics & Discourse

anaphora, implicatures

Language processing

experimental paradigms

Lexical & Distributional 
Semantics

meaning representation,
WSD, vector models, 

Introduction to Computational Linguistics

University of Osnabrück

Cognitive Science BSc Programme

Summer Term 2016

Lecture 8

Syntax 3: Syntactic Parsing

Peter Bosch

The material for this lecture series rests on contributions from many people, most of whom have taught parts of this class in earlier years: 
Stefan Evert, Stefan Hinterwimmer, Graham Katz, Anke Lüdeling, Sabine Reinhard, Malte Wöstmann. It has also profited from the 
interaction with tutors and students .  Further sources are listed in the Reference sections and on individual slides.

Syntactic Parsing

Syntactic Parsing

Parsing with CFG     Chart Parsing    Human Parsing

Parsing with CFG Chart Parsing    Human Parsing

Today’s agenda

1.

Syntactic Parsing

2. Chart Parsing

3. Human Parsing

Syntactic parsing

means



recognizing a string of words as a sentence, and
assigning a structure to it.

The input of a parser is

a string of words and
a CF‐grammar.

The output of a parser is

a phrase structure tree (or parse tree).

CFG is a declarative formalism.
Accordingly, there are many possible parsing algorithms for CFGs

Syntactic Parsing

Syntactic Parsing

Parsing with CFG Chart Parsing    Human Parsing

Parsing with CFG Chart Parsing    Human Parsing

A Context‐free Grammar G is a 4‐tuple
<N, S, P, S>
 N: a finite set of non‐terminal symbols
 Σ : a finite set of terminal symbols
 SN: the start symbol
 P: a set of production rules

where  A  N  and    (Σ∪ N)*

Production rules are of the type  A  

An example of a phrase 
structure grammar that 
we saw earlier:

S  NP   VP
NP  Det N
VP  VP   PP
VP  V   NP
PP  P  NP
Det  {every, a}
N  {boy, dog, stick}
V  hit
P  with

A Context‐free Grammar G is a 4‐tuple
<N, S, P, S>
 N: a finite set of non‐terminal symbols
 Σ : a finite set of terminal symbols
 SN: the start symbol
 P: a set of production rules

where  A  N  and    (Σ∪ N)*

Production rules are of the type  A  

An example of a phrase 
structure grammar that 
we saw earlier
in another format:
N={S, NP, VP, PP, Det, N, V, P} 
Σ ={every, a, boy, dog, stick,    

hit, with} 

S N
P = {    

S  NP   VP
NP  Det N,
VP  VP   PP,
VP  V   NP,
PP  P  NP }
Det  {every, a}
N  {boy, dog, stick}
V  hit
P  with

1

