Informatik C

Grundlagen der Technischen Informatik

Prof. Dr.-Ing. Werner Brockmann, M. Sc. Jonas Schneider

¨Ubung 1 - Beispiel-CPU H6809

Abgabe am Di, 28.10.2014, 14:00 Uhr in der Vorlesung

Vermerken Sie auf Ihren Abgaben immer gut erkennbar Ihre Namen und den Namen
Ihres Tutors!

Hinweise: Schreiben Sie f¨ur die schriftliche Abgabe alle Assemblerprogramme und -sequenzen
in der Form tabellarisch auf, die auf den L¨osungsbl¨attern im Anhang vorgegeben ist, und
befolgen Sie folgende Konventionen:

• In der Spalte Label bekommen alle Variablen, Konstanten und Sprungziele eindeutige

und m¨oglichst selbstredende Namen zugewiesen.

• In der Spalte Opcode stehen nur Assemblerbefehle oder -direktiven (in Klartext).
• In der Spalte Operand stehen Variablennamen, Konstantennamen, Sprungziele oder

Konstanten.

• Mindestens jede Gruppe von Assemblerbefehlen bekommt einen Kommentar.
• Vor einer durchzuf¨uhrenden Aufgabe sollte jeweils die Verwendung der Register in einem

Registerbelegungsplan festgelegt werden.

• Beim Schreiben von Assemblerprogrammen empﬁehlt es sich, zun¨achst die Speicherzel-
len von Variablen und Konstanten zu labeln und dann das Programm in den Spalten
Opcode und Operand zu entwickeln. Dabei werden Sprungziele mit Labeln versehen.

• Alle Variablen m¨ussen beim Programmstart zun¨achst grunds¨atzlich initialisiert werden.
• Beenden Sie Ihre Programme f¨ur die H6809 jeweils durch einen Sprung an die Speicher-

adresse 1000hex (analog z.B. zu einem Wiedereinstiegspunkt in das Betriebssystem).

• Danach kann das fertige Programm in die Maschinensprache (Objektcode) in Hexade-

zimaldarstellung in der Spalte M(Adr) ¨ubertragen werden.

Hier seien die in den folgenden ¨Ubungsaufgaben verwendeten Variablen zentral wie folgt
abgelegt:

Variable
Adresse

Z1

Z2

$0500

$0501

ERG
$0502

INP
$0503

Z

$0504

Aufgabe 1.1:

Arithmetik auf Variablen

(12 P)

Hochsprache:

ERG = Z1 + Z2
ERG = Z1 - Z2
ERG = Z1 & Z2

Schreiben Sie je eine Assemblersequenz f¨ur die H6809, die die Addition, Subtraktion und bit-
stellenweise Verundung der beiden Byte-Variablen an den Speicherstellen Z1 und Z2 durchf¨uhrt.
Legen Sie jeweils das Resultat an der Speicherstelle ERG ab. Vernachl¨assigen Sie bei den Re-
chenoperationen ¨Uber- bzw. Unterl¨aufe und liefern Sie nur das Low-Word (niederwertiges
Byte) als Ergebnis.

1

Aufgabe 1.2:

For-Schleife

(8 + 16 = 24 P)

Hochsprache:

Z = 1;
for I = 1 → 40
do

if Z > 50
then

Z = Z-50;

else

Z=Z*3;

¨Uberlegen Sie sich eine geschickte L¨osung f¨ur eine For-Schleife, die eine Zahl 40 Iterationen
lang so lange verdreifacht, bis sie gr¨oßer als 50 ist und in dem Fall solange von der Zahl 50
abzieht, bis sie wieder kleiner als 50 ist. Die Zahl liegt an Speicherstelle Z.

a) Fertigen Sie einen Programmablaufplan mit auf der H6809 ausf¨uhrbaren Operationen

an, in dem Sie die Abarbeitung der For-Schleife beschreiben.

b) Schreiben Sie hierzu eine Assemblersequenz f¨ur die H6809, die die notwendigen Opera-

tionen durchf¨uhrt.

Aufgabe 1.3:

Taschenrechner

(8 + 16 + 8 = 32 P)

Addition, Subtraktion und Verundung sollen nun zu einem einfachen Taschenrechner zusam-
mengef¨ugt werden. Die zu verrechnenden Variablen stehen wieder an den Speicherstellen Z1
und Z2. Ebenfalls wird das Ergebnis wieder an Speicherstelle ERG abgelegt. Die Auswahl der
auszuf¨uhrenden Rechenoperation erfolgt ¨uber zwei Auswahlbits (S0 und S1) an der Speicher-
stelle INP. Die Auswahlbits liegen an den geringstwertigen Bitstellen von INP. Nicht genutzte
Bits werden standardm¨aßig mit 0 belegt. Die Speicherstelle INP ist somit wie folgt belegt:

Speicherstelle INP
0

0

0

0

0

0 S1 S0

Die Operationen sollen wie folgt durch die Auswahlbits ausgew¨ahlt werden k¨onnen:

S1 S0 Operation
0
0
1
1

Addition
Subtraktion
Verundung
Ung¨ultig

0
1
0
1

Bei einer ung¨ultigen Wahl, d.h. auch dann, wenn die nicht genutzten Bits ungleich 0 sind, soll
das Ergebnis mit 0 belegt werden.

a) Fertigen Sie einen Programmablaufplan mit auf der H6809 ausf¨uhrbaren Operationen

an, in dem Sie die Funktionsweise des Taschenrechners beschreiben.

b) Schreiben Sie eine Assemblersequenz f¨ur die H6809, die den beschriebenen Taschenrech-

ner umsetzt.

c) Handassemblieren Sie Ihr Programm aus Aufgabenteil b).

2

