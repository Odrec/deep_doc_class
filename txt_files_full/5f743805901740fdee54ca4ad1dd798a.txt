Organisation
Introduction
Human Language
Formal Languages

ICL - T1 - Organisation, Human Language,

Chomsky Hierachy

Christoph Stenkamp

April 13, 2016

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

1/28

Organisation
Introduction
Human Language
Formal Languages

Homework
Organisation
Latex

Organisational Stuﬀ

I’m Chris
Email: cstenkamp@uos.de
Homework

Make up 33% of the ﬁnal grade!
Uploaded as PDF via Stud.IP into your group-folder
Name Convention: HW# rzlogin1 rzlogin2 rzlogin3.pdf
Please stick to the naming convention, and also include your names
somewhere inside the ﬁle.
If your names are neither in the name nor in the ﬁle itself, I can’t
credit your eﬀort!
Will be corrected and sent back to all of you via Email (hence your
rz-logins)
If you want a pen-and-paper correction, please additionally hand
them in at the beginning of a tutorial.
ﬁrst homework probably due to 21.04.2016

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

2/28

Organisation
Introduction
Human Language
Formal Languages

Homework
Organisation
Latex

What are we going to do here?

Review the important points from the lecture
Go through some exercises
Answer all the questions you may have
Focus mainly on the parts that may occur in the exam (not
guaranteed!)
Focus on important stuﬀ (tell me if I’m heading in the wrong
direction!)

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

3/28

Organisation
Introduction
Human Language
Formal Languages

Homework
Organisation
Latex

More organisational Stuﬀ

I am here to answer your questions..
However, I will not correct complete exams you found on dubious
sources...
Also, if you have questions, please do not rely on me answering
them one day before the exam.
Yes, you can fail the exam if your other exam and homework is well
enough
No, you don’t have to attend the tutorial, just like the lecture
I hope I don’t have any mistakes on my slides, however if you ﬁnd
contextual errors on the slides and are the ﬁrst one to mention to
me, you’ll get chocolate.

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

4/28

Organisation
Introduction
Human Language
Formal Languages

Homework
Organisation
Latex

LATEX

This is a great time to learn LATEX!

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

5/28

Organisation
Introduction
Human Language
Formal Languages

Homework
Organisation
Latex

LATEX

This is a great time to learn LATEX!

One huge advantage:

F is now simply \textipa{f}

http://www.ling.ohio- state.edu/events/lcc/tutorials/tipachart/tipachart.pdf
http://detexify.kirelabs.org/classify.html

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

5/28

Organisation
Introduction
Human Language
Formal Languages

What is linguistics?

Linguistics

Linguistics it the scientiﬁc study of human language and human
languages.

In this course: mainly theoretical linguistics

Phonology: the function and patterning of sounds
Phonetics: the sounds of one language
Morphology: the analysis of word structure
Syntax: the analysis of sentence structure
Semantics: the analysis of meaning
Pragmatics: the way context contributes to meaning

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

6/28

Organisation
Introduction
Human Language
Formal Languages

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

7/28

Organisation
Introduction
Human Language
Formal Languages

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

8/28

Organisation
Introduction
Human Language
Formal Languages

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

9/28

Organisation
Introduction
Human Language
Formal Languages

Plan for today

1 Organisation
Homework
Organisation
Latex

2

Introduction

3 Human Language

4 Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

10/28

Organisation
Introduction
Human Language
Formal Languages

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

11/28

Organisation
Introduction
Human Language
Formal Languages

Some features...

Specialization1

system serves no other purpose

Semanticity about the world
Arbitraryness2

the symbols are chosen arbitrarily

Prevarication can be used to lie

Learnability variants can be learned

Reﬂexiveness can be used to discuss itself

Displacement not tied to here and now

Productivity can produce (syntactically) new messages

Adaptivity can handle new circumstances (semantic)

Monkey warning signs

Programming languages

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

12/28

Organisation
Introduction
Human Language
Formal Languages

Some features...

Specialization1

system serves no other purpose

Semanticity about the world

Arbitraryness2

the symbols are chosen arbitrarily

Prevarication can be used to lie

Learnability variants can be learned

Reﬂexiveness can be used to discuss itself

Displacement not tied to here and now

Productivity can rearrange its symbols in a way it didn’t do before

Adaptivity can describe things in the world the others haven’t seen before

Monkey warning signs

Programming languages

1Yes, the signs can be used to lie, however so can human language. An example of non-specialized communication is dog panting
[”hecheln”]. When a dog pants, it often communicates to its owner that it is hot or thirsty; however, the dog pants in order to cool itself
oﬀ. This is a biological function, and the communication is a secondary matter
2Again, a dog panting is an example of a non-arbitrarily chosen symbol.

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

12/28

Organisation
Introduction
Human Language
Formal Languages

Characteristics of human language

Possibly exclusive to human language are:

Reﬂexiveness
Displacement
Productivity
Adaptivity

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

13/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

Formal Languages

Deﬁnition
A formal language is the set of sequences of atomic symbols that belong
to the language.

(cid:80) is a ﬁnite alphabet of symbols a, b, c, ..., s, t ∈(cid:80)
(cid:80) * is the set of all strings over(cid:80)
→ A formal language is a (possibly inﬁnite) subset A of(cid:80) *

Strings are ﬁnite sequences of symbols (u, v , ..., z are variables for
strings, ε the empty string)

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

14/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

Regular Expressions

One certain formal language is a regular language. Regular languages can be described by
regular expressions, FSAs and regular grammars

A Regular Expression consist of strings from the alphabet of the target language plus
optional metacharacters. It deﬁnes a set of strings.

.
?
*
+
{n}
{n,m}
{n,}
[]
()

(..|..|..)

matchall (any char)

preceding expression 0 or 1 times

Kleenee star - preceding expression 0 or more times

Kleenee plus - preceding expression 1 or more times

preceding expression exactly n times

preceding expression n to m times

preceding expression at least n times

Disjunction of single chars

Grouping of chars into longer expressions

Disjunction of longer expressions

[ˆ ...]

negation of element

ˆ
$
\b
\B
[a-z]
\

beginning of line

end of line

word boundary

non-word boundary

matches any lowercase letter

escape character to deﬁne meta-char

as normal char

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

15/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

Regular Expressions - Application and Exercises

echo ’<?>’;

What should the text be at <?>?
if preg match(’\b[a-zA-Z0-9 ]{3,}@[a-z]{3,}\.(de|com)’, $foo) {
}
”Email Accepted”

Find a regular expression that matches the words happy, unhappy, happier, happiest,
unhappier, unhappiest
(un)?happ(y|ier|iest)
Find a regular expression that matches all dates after 30.12.1999 in the form dd.mm.yyyy
(31\.12\.1999|((0[1-9]|[12][0-9]|3[01])\.(0[1-9]|1[0-2])\.[2-9][0-9]{3}))

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

16/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

Finite State Automata

A Finite State Automaton (FSA) is a 5-tuple <Q,(cid:80),q0,F,δ(q,i) >
(cid:80): ﬁnite input alphabet

Q: ﬁnite(!) set of states

q0 ∈ Q: start state
F ⊆ Q: ﬁnal states
δ(q,i): transition function

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

17/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

FSA exercise

Which strings are accepted by those FSAs?

abcabc
abb
ab
ccabbbc
abcccbaab
ε

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

18/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

Regular Grammars

A language deﬁned by an FSA can also be described by a regular

grammar, which is a 4-tuple <N,(cid:80),S,P >
(cid:80): terminal symbols

N: non-terminal symbols (states)

S: start symbol
P: Production rules

A regular grammar deﬁnes a regular language

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

19/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

20/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

The Chomsky Hierachy

Formal Languages can be classiﬁed in a hierarchy, according to how strict the production rules are.
The higher in the hierarchy, the more strict the production rules are, the less is representable with
the language.

Type

Name

Example Language Allowable Productions
A → bC ; A → b

OR A → Cb ; A → b

Recognizing Automaton

Finite State Automaton

Pushdown Automaton (Kellerautomat)

Linear Bounded Automaton

Turing Machine

A → α

αAβ → αγβ

γ → α

3

2

1

0

Regular

Context Free

Context Sensitive

ambn

anbn
anbncn

Recursively Enumerable

unrestricted

For capital letters as nonterminal strings, lowercase letters as terminal strings,
and α, β and γ as variables for arbitrary sequences of strings, with γ (cid:54)= ε
Yes, you should know the Chomsky Hierachy!

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

21/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

Example Language?

What does example language mean?

We use a grammar with its production rules to determine whether a
given string belongs to a certain language.
A string belongs to the language if it is possible to derive the given
string from the starting state, using only allowed production rules
(with zero nonterminal symbols left) (Bottom-up-approach)
Using the Top-down-approach, we would try to derive the start
symbol from the given string using only allowed production rules
backwards.

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

22/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

Example Language?

Why can’t an FSA create/check a language like anbn?
Say we want to check whether a train loses its trailers on a bridge.

For that, we count the amount of trailers the train had before entering the bridge, as well as
afterwards.

Say now, for every trailer before the bridge we put an a on a stack, and for every trailer
afterwards we put a b on the stack.

If we now wanted to create an FSA to check for ”as many as as bs”, we could only store
our knowledge about the amount of as via a state.

If we wanted to check for 100 trailers, we needed at least 100 states.

So if we wanted to check for arbitrarily many trailers, we needed inﬁnitely many states,
which contradicts our deﬁnition of ﬁnitely many states in an FSA.

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

23/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

Example Grammar

What would a grammar that can check for anbn look like?

We need to get from our nonterminal symbol S to the terminal
sequences ab, aabb, aaabbb, etc.
For that, we only need

N = {S}

(cid:80) = {a,b}
(cid:40)

S = S

P =

S → aSb← not possible with regular grammars!
S → ab

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

24/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

25/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

Can you come up with the corresponding RegExp?
baa+! or baaa! or ba{2,}!

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

26/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

Given the following RegExp, ﬁnd the corresponding FSA and grammar!
RegExp: (a|ab+cd?)

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

27/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

Given the following RegExp, ﬁnd the corresponding FSA and grammar!
RegExp: (a|ab+cd?)
FSA:

Grammar:

N = {S,T,U,V,W}

(cid:80) = {a,b,c,d}

S = S



S → a
S → aT
T → bU
U → bU
U → c
U → cV
V → dW
W → ε

P =

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

27/28

Organisation
Introduction
Human Language
Formal Languages

Formal Languages
Regular Expressions
Finite State Automata and regular grammars
Chomsky Hierachy
Putting it all together

Goodbye!

That’s it for now, see you next week!

If you liked...
•LATEX, you may want to take ”Text- und Datenverarbeitung” from the Physics
Department
•Formal Languages, you’ll deﬁnitely like Informatik D.

Christoph Stenkamp

ICL - T1 - Organisation, Human Language, Chomsky Hierachy

28/28

