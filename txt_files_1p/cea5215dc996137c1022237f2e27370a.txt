REVIEW OF SYNTACTIC PRINCIPLES OF

HEURISTIC-DRIVEN THEORY PROJECTION

CHRISTOPH FINKENSIEP, RENATO GARITA AND MARINA HOLZER

Abstract. This is a summary and review of the paper written by Angela
Schwering, Ulf Krummack, Kai-Uwe K¨uhnberger and Helmer Gust titled Syn-
tactic Principles of Heuritic-Driven Theory Projection. The Heuristic-Driven
Theory Projection (HDTP)is a mathematically sound framework for analogy
making. It’s proposed as the ﬁrst theory for analogies that uses a logic-based
approach.

1. Introduction

Given the importance of analogy from a cognitive perspective and the complexity
of the analogical process [1], it seems prudent to have several theories that approach
the construction of analogies from diﬀerent perspectives. Since there’s no theory
out there which has a strong logical foundation to analogies, HDTP is a welcoming
addition.

The paper Syntactic Principles of Heuritic-Driven Theory Projection [3] de-
scribes the analogy process as one by which a knowledge domain (target) can be
enriched by comparing its structural relationships and rules with another domain
(source).

According to the paper, making analogies is a three step process. The ﬁrst step
is retrieval and it aims to ﬁnd a source domain for the target domain. The second
step is mapping which builds an analogical relation between the source and target
domains by identifying common structures and mapping concepts and relations.
The third step is the transfer which transfers knowledge from the source domain
to the target domain using the analogical relationship. HDTP can do the mapping
and transfer provided that it is given a source and target domains.

2. Analogical mechanisms with HDTP: mapping and transfer

The idea about mapping in an analogical process is to detect structures in the
source domain that are common or can be applied in the target domain. HDTP
uses anti-uniﬁcation to create a generalization of both domains.

2.1. Anti-uniﬁcation. Anti-uniﬁcation can be formally described as follows: given
two formulas s and t, ﬁnd a generalization G of s and t so that there exists some
substitutions α and θ that transform G into s and t respectively.

A least general generalization (lgg) is preferred thus making the substitutions less
complex. It is also ideal if the generalization can preserve as much of the structure
of both domain terms as possible and that the generalization is not structurally
more complex than the original terms.

Anti-uniﬁcation can be either ﬁrst-order where the substitution is done from
variables to terms or it can be a higher-order where variables can take arguments

1

