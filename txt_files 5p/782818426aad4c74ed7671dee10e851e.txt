4.4 Anpassung (Fitten) von Differentialgleichungsmodellen an Daten  
4.4.1 Beispiel: Zellwachstum 
Wir wollen das logistische Wachstumsmodell 

𝑑𝑦
𝑑𝑡

= 𝑟 𝑦 (1 −

𝑦
𝐾

) ,

𝑟, 𝐾 > 0, 𝑦(0) = 𝑦0, 

an experimentelle Daten anpassen (fitten). Wir verwenden einen klassischen Datensatz, der die 
Populationskonzentration vom Einzeller Paramecium caudatum (Pantoffeltierchen) beschreibt und 
von Gause1 (1934) erhoben wurde. 

 

Das heißt, wir wollen Werte für die beiden Parameter 𝑟 und 𝐾 finden, so dass die Lösung des 
logistischen Wachstumsmodells möglichst gut die vorhandene Datenreihe beschreibt. Im Gegensatz 
zu Abschnitt 4.1 verwenden wir nun aber keine analytische Lösung des Wachstumsmodells, die in 
Form einer Gleichung 𝑦(𝑡) für die „wahre“ Lösung  gegeben wäre. Stattdessen lösen wir das 
Wachstumsmodell numerisch. Und diese numerische Näherungslösung wollen wir an die 
experimentellen Daten anpassen. Das heißt, wir haben es mit zwei Aufgaben zu tun: 

1.  Numerische Lösung des Differentialgleichungsmodells (wie in Abschnitt 4.3) 
2.  Minimierung der Summe der Abstandsquadrate zwischen numerischer Näherungslösung und 

experimentellen Daten (wie in Abschnitt 4.2) 

Der Datensatz ist gegeben durch die Datenpunkte (𝑡𝑗, 𝜈𝑗), 𝑗 = 1, … , 𝑙. 𝑙 ist die Länge der Datenreihe. 

Die wahre Lösung des Wachstumsmodells sei (𝑡, 𝑦(𝑡)) und ist eine kontinuierliche Funktion in 𝑡. Sie 
spielt in diesem Beispiel aber keine große Rolle. Stattdessen: 

Die numerische Lösung bezeichnen wir mit (𝑡𝑖, 𝑦𝑖), gegeben an diskreten Stellen 𝑡𝑖, 𝑖 = 1, … , 𝑛. 

Aufgabe: 

min
𝑟,𝐾>0

𝑙
2
∑(𝑦𝑗 − 𝜈𝑗)
𝑗=1

 

                                                           
1 Georgi Gause (1910-1986) war ein sowjetischer Mikrobiologe. 

unter den Nebenbedingungen, dass nur Parameterwerte 𝑟, 𝐾 > 0 zulässig sind. 

 

4.4.2 Implementierung in MS Excel 

Daten                           Eingabe der numerischen Näherungsformel 𝑦𝑖 = 𝑦𝑖−1 + ℎ (𝑟 𝑦𝑖−1  (1 −

𝑦𝑖−1

𝐾

)) 

Damit haben wir die 1. Aufgabe erledigt, nämlich die numerische Näherung des Wachstumsmodells. 

 

Nun wollen wir die Summe der Abstandsquadrate berechnen. Die experimentellen Daten liegen aber 
im Zeitschritt von 1 Tag vor, wohingegen die Schrittweite der numerischen Näherungslösung feiner 
aufgelöst ist. Also erstellen wir eine Spalte „Model“, in der wir die Werte 𝑦𝑖 herausfiltern, für die 𝑡𝑖 in 
den Datenpunkten auftaucht (also ein ganzzahliger Tag ist). Dies erreichen wir mit dem Befehl  

SVERWEIS(Suchkriterium;Matrix;Spaltenindex;[Bereich_Verweis]) 

Suchkriterium: 𝑡𝑗 aus den Daten 
Matrix: (𝑡𝑖, 𝑦𝑖) der numerischen Näherung 
Spaltenindex: 2, d.h. gebe die 2. Spalte aus, die die 𝑦𝑖 enthält. 

 

 

Jetzt können wir die Abstandsquadrate und deren Summe (RSS, residual sum of squares) berechnen. 
Dabei müssen wir den fehlenden Datenpunkt für 𝑡𝑖 = 1 beachten. Dies lösen wir durch eine WENN-
Abfrage: Wenn nämlich die Zelle leer ist (z.B. «B11=““»), dann dürfen wir diesen Punkt nicht 
berücksichtigen und setzen das Abstandsquadrat =0. 

 

 

Um nun auch noch die 2. Aufgabe zu beenden, müssen wir RSS minimieren. Dafür verwenden wir 
den Solver und erhalten folgendes Ergebnis: 

 

4.4.3 Anpassen der Parameter und des Anfangswertes 
Im obigen Beispiel haben wir vorausgesetzt, die Anfangsbedingung (𝑡0, 𝑦(𝑡0)) zu kennen bzw. wir 
haben sie einfach von den experimentellen Daten (𝑡0 = 0, 𝜈0 = 2) übernommen. Es besteht jedoch 
kein Grund, diesen experimentellen Wert als „unveränderlich“ anzusehen, wenn wir uns damit 
zufrieden geben, die anderen experimentellen nicht genau mit unserer numerischen Lösung zu 
erreichen. Wir können den Anfangswert 𝑦0 als weiteren Parameter betrachten, den wir durch 
nichtlineare Anpassung bestimmen wollen.  

Also: 

min

𝑟,𝐾,𝑦0>0

𝑙
2
∑(𝑦𝑗 − 𝜈𝑗)
𝑗=0

 

Beachten Sie, dass wir nun den Anfangswert in die Summe der Abstandsquadrate miteinbeziehen 
müssen, also den Index 𝑗 = 0. 

Im Solver fügen wir einfach den Wert der Anfangsbedingung zu den veränderbaren Variablenzellen 
hinzu. Und wir berücksichtigen natürlich das Abstandsquadrat des Anfangswertes für die RSS. 

 

Ergebnis: Die RSS ist kleiner geworden, die Anpassung hat sich also verbessert. Dies ist zu erwarten, 
da wir über einen zusätzlichen Parameter optimiert haben. Beachten Sie, dass sich auch die Werte 
für 𝑟, 𝐾 und 𝑦0 im Vergleich zu Abschnitt 4.4.2 geändert haben. 

 

 

 

 

 

4.5 Mehrkomponentsysteme 
Bislang haben wir Modelle mit einer variablen Zustandsgröße betrachtet (z.B. das Konzentrations-
verhältnis bei der AHL-Diffusion oder die Populationsgröße von P. caudatum). Solche Systeme/-
Modelle nennt man auch einkomponentig (oder eindimensional). Bei mehreren Zustandsvariablen 
sprechen wir von mehrkomponentigen Systemen/Modellen. Man kann sich leicht ausmalen, dass in 
der Realität viele Zustandsgrößen miteinander wechselwirken. 

Im nächsten Abschnitt stellen wir ein einfaches Beispiel mit zwei Komponenten vor, indem wir das 
Zellwachstum-Modell um eine konkurrierende Art erweitern. Es folgen einige Anmerkungen zur 
Numerik von Differentialgleichungssystemen. Schließlich betrachten wir die Anpassung von 
Differentialgleichungssystemen an Daten. 

4.5.1 Ein Konkurrenzmodell 
In Abschnitt 4.4.1 haben wir das Populationswachstum des (Geschwänzten) Pantoffeltierchens P. 
caudatum betrachtet. In einer solchen Reinkultur führt dies zu logistischem Wachstum. Gause (1934) 
hat ein weiteres Experiment durchgeführt, nämlich eines, in dem er nicht nur P. caudatum, sondern 
auch die verwandte Art P. aurelia (Ohren-Pantoffeltierchen) in Mischkultur gezüchtet hat. Dabei 
teilen sich die beiden Arten die Nährstoffe, d.h. sie stehen in Konkurrenz zueinander. P. aurelia ist 
deutlich kleiner als P. caudatum, vermehrt sich aber schneller.  Was passiert nun in der Mischkultur? 
Wachsen beide Arten weiterhin logistisch oder behindern sie sich gegenseitig in ihrem Wachstum? 
Die Daten zeigen Folgendes: In den ersten Tagen der Mischkultur wachsen beide Arten nahezu 
exponentiell an, doch dann setzt sich die kleinere Art P. aurelia durch und verdrängt P. caudatum.2   

                                                           
2 Gause hat damit das Konkurrenzausschluss-Prinzip entdeckt: Eine ökologische Nische kann nicht durch zwei 
Arten am selben Ort und zur gleichen Zeit besetzt werden. Eine der beiden Arten wird sich auf Dauer 
durchsetzen und die andere verdrängen. Kann die konkurrenzschwächere Art nicht in eine andere ökologische 
Nische ausweichen, so wird sie schließlich vollständig ausgelöscht. 

 

Die Konkurrenzsituation lässt sich wie folgt modellieren: 

𝑑𝑦
𝑑𝑡
𝑑𝑧
𝑑𝑡

 

= 𝑟1𝑦 (1 −

= 𝑟2𝑧 (1 −

𝑦
𝐾1̂
𝑧
𝐾2̂

)
 

)

𝑦(𝑡) und 𝑧(𝑡) sind die Populationsdichten von P. caudatum bzw. P. aurelia zur Zeit 𝑡. 𝑟1 und 𝑟2 sind 
die intrinsischen relativen Wachstumsraten von P. caudatum bzw. P. aurelia. Die „effektiven“ 
Kapazitäten der beiden Arten werden beschrieben durch 

𝐾1̂ =

𝐾1

1+𝛼 𝑧/𝑦

 und 𝐾2̂ =

𝐾2

1+𝛽 𝑦/𝑧

. 

In Reinkultur (d.h., für P. caudatum 𝑦 = 0 und für P. aurelia 𝑧 = 0) erhält man jeweils logistisches 
Wachstum mit den Kapazitäten 𝐾1̂ = 𝐾1 bzw. 𝐾2̂ = 𝐾2. Die zusätzlichen Summanden im Nenner der 
effektiven Kapazitäten stammen von der Konkurrenzsituation und sorgen dafür, dass sich die 
effektive Kapazität in Mischkultur im Vergleich zur „normalen“ Kapazität in Reinkultur verkleinert. 
Mathematisch: 𝐾1̂ < 𝐾1 für 𝑧 > 0 und 𝐾2̂ < 𝐾2 für 𝑦 > 0. Die beiden Parameter 𝛼 und 𝛽 
beschreiben den Konkurrenzdruck der jeweils anderen Art, also von Spezies 2 auf Spezies 1 bzw. von 
Spezies 1 auf Spezies 2. 

Die beiden obigen Differentialgleichungen bilden ein System von Differentialgleichungen. Da 𝐾1̂ eine 
Funktion von 𝑧 ist und  𝐾2̂ eine Funktion von 𝑦, handelt es sich um ein gekoppeltes System. 

 

4.5.2 Numerische Behandlung von Differentialgleichungssystemen 
Für eine einzelne Differentialgleichung der Form 

𝑦′ = 𝑓(𝑦) 

mit der Anfangsbedingung 𝑦(𝑡0) = 𝑦0 haben wir in Abschnitt 4.3.2 das Euler-Verfahren 

𝑦𝑖 = 𝑦𝑖−1 + ℎ 𝑓(𝑦𝑖−1),

𝑖 = 1, … , 𝑛, 

zur Schrittweite ℎ hergeleitet. 

Bei Mehrkomponenten-Systemen haben wir ein Differentialgleichungssystem zu betrachten. Im Fall 
von zwei Zustandsgrößen: 

𝑑𝑦
𝑑𝑡
𝑑𝑧
𝑑𝑡

= 𝑓(𝑦, 𝑧)
 

= 𝑔(𝑦, 𝑧)

mit den Anfangsbedingungen 𝑦(𝑡0) = 𝑦0 und 𝑧(𝑡0) = 𝑧0. Die entsprechende Vorschrift für das Euler-
Verfahren lautet dann 

𝑦𝑖 = 𝑦𝑖−1 + ℎ 𝑓(𝑦𝑖−1, 𝑧𝑖−1) 

𝑧𝑖 = 𝑧𝑖−1 + ℎ 𝑔(𝑦𝑖−1, 𝑧𝑖−1) 

für 𝑖 = 1, … , 𝑛. Es ist wichtig, in den Funktion 𝑓 und 𝑔 jeweils nur die Werte 𝑦𝑖−1 und 𝑧𝑖−1 der 
vorherigen Schritte zu benutzen. (Insbesondere also nicht das vielleicht schon berechnete 𝑦𝑖 als 
Argument von 𝑔(𝑦𝑖−1, 𝑧𝑖−1) benutzen). 

4.5.3 Anpassen von Differentialgleichungssystemen an Daten 
Wir haben einen Datensatz, der an 𝑙 Zeitpunkten 𝑡𝑗 die Populationsdichten 𝜈𝑗 und 𝜁𝑗 enthält (𝑗 =
1, … , 𝑙). Unser Ziel ist es, die Modellparameter 𝑟1, 𝑟2, 𝐾1, 𝐾2, 𝛼 und 𝛽 sowie Anfangsbedingungen 𝑦0 
und 𝑧0 so zu bestimmen, dass sich die Lösung des Differentialgleichungssystems möglichst gut den 
Daten anpasst. Dazu verwenden wir wieder die Methode der kleinsten Quadrate und minimieren 

min

𝜃

𝑙
∑ [(𝑦𝑗 − 𝜈𝑗)
𝑗=1

2

2
+ (𝑧𝑗 − 𝜁𝑗)

]

, 

wobei 𝜃 = { 𝑟1, 𝑟2, 𝐾1, 𝐾2, 𝛼, 𝛽, 𝑦0, 𝑧0} den zu bestimmenden Satz von positiven Parametern (inkl. 
Anfangsbedingungen) bezeichnet. Das heißt, wir verwenden wieder die numerische Näherungs-
lösung (gegeben durch 𝑦𝑗 und 𝑧𝑗). 

Beachten Sie, dass in die Summer der Abstandsquadrate (RSS) der Fehler 𝑦𝑗 − 𝜈𝑗 und der Fehler 𝑧𝑗 −
𝜁𝑗 in gleichem Maße eingehen, also deren Quadrate einfach addiert werden (siehe später für eine 
mögliche Wichtung). 

 

4.5.4 Anpassen des Konkurrenzmodells an Daten in MS Excel 
Die folgende Gleichung ist die Formel für den nächsten Zeitschritt mit dem Euler-Verfahren, zunächst 
für die Zustandsgröße 𝑦. 

Und hier für die Zustandsgröße 𝑧:  

 

 

 

 

 

Die Summe der Abstandsquadrate gewichtet die Fehler von 𝑦 und 𝑧 gleichermaßen:  

Ergebnisgraph: 

 

 

 

Die hier gefundenen Parameterwerte nach einem zweiten Suchlauf lauten 

𝑟1 = 0,93
𝑟2 = 0,97
𝐾1 = 222,7 𝐾2 = 380,8
 
𝛼 = 0,56
𝛽 = 0,87

Demnach wächst P. aurelia also etwas schneller (𝑟2 > 𝑟1) und hat vor allem eine deutlich größere 
Kapazität (in einer Einzelkultur, 𝐾2 > 𝐾1). Obwohl P. caudatum einen größeren Konkurrenzdruck 
ausübt (𝛽 > 𝛼), kann sich P. aurelia durchsetzen und P. caudatum verdrängen. 

 

 

4.6 Wichtungsfaktoren 
4.6.1 Der Fall mehrerer Zustandsvariablen 
Im vorigen Abschnitt haben wir eine Fehlersumme (RSS) betrachtet, in der die Fehler für beide 
Zustandsgrößen 𝑦 und 𝑧 gleichermaßen eingehen: 

𝑙
2
∑ [(𝑦𝑗 − 𝜈𝑗)
𝑗=1

2
+ (𝑧𝑗 − 𝜁𝑗)

. 
]

Es könnte nun sein, dass eine der beiden Zustandsvariablen deutlich größere Werte annimmt als die 
andere (z.B. erreicht P. aurelia deutlich höhere Populationsdichten als P. caudatum). Dann 
„dominiert“ sie die Fehlersumme (siehe Abbildung):  

Fehlersumme P. caudatum (𝑦):     2.739 
Fehlersumme P. aurelia (𝑧):  
16.418 

 

Dies führt dazu, dass die 𝑧–Kurve (genauer die numerische Näherungslösung 𝑧(𝑡) des Modells) 
genauer an die P. aurelia-Daten angepasst wird als die 𝑦–Kurve an die P. caudatum-Daten. Dies 
möchte man jedoch im Allgemeinen vermeiden, da sich das Modell nicht nur an eine Zustandsgröße, 
sondern möglichst an alle gut anpassen soll. 

Eine Möglichkeit, dieses Problem zu umgehen, ist die Einführung von Wichtungsfaktoren, z.B. 

𝑙
2
∑ [ (𝑤̃1[𝑦𝑗 − 𝜈𝑗])
𝑗=1

2
+ (𝑤̃2[𝑧𝑗 − 𝜁𝑗])

]

. 

Es wird also jede Abweichung gewichtet, bevor sie quadriert wird und in die Fehlerquadratsumme 
eingeht. Der Wichtungsfaktor unterscheidet sich nach der Zustandsgröße, ist aber für jede 
Zustandsgröße konstant. 

Je nach Wahl von 𝑤1 und 𝑤2 werden die Fehler von 𝑦 bzw. 𝑧 unterschiedlich stark gewichtet. Falls 𝑧 
bspw. etwa 10-mal größer ist als 𝑦, könnte man  wählen: 

𝑤̃1 = 10 und 𝑤̃2 = 1 (oder auch 𝑤̃1 = 1 und 𝑤̃2 =

1
10

). 

Etwas einfacher könnte man natürlich auch schreiben: 

𝑙
2
∑ [ 𝑤1(𝑦𝑗 − 𝜈𝑗)
𝑗=1

2
+ 𝑤2(𝑧𝑗 − 𝜁𝑗)

]

, 

wobei dann 𝑤1 = 𝑤̃1

2 und 𝑤2 = 𝑤̃2

2. 

 

4.6.2 Der Fall eines zu treffenden Trends 
In Abschnitt 4.6.1 wurden die Fehler der jeweiligen Zustandsgrößen unterschiedlich gewichtet, aber 
für jede einzelne Zustandsgröße war der Wichtungsfaktor für jeden Datenpunkt konstant. Es gibt 
jedoch Situationen, in denen man bestimmte Datenpunkte stärker gewichten möchte als andere. 
Zum Beispiel könnte man sich vor allem dafür interessieren, dass das Modell die „letzten“ 
Datenpunkte gut fittet, insbesondere wenn man sich eher für das Langzeitverhalten des Modells 
interessiert. Dies kann man wie folgt berücksichtigen: 

𝑙
2
∑ [𝑤1𝑗 (𝑦𝑗 − 𝜈𝑗)
𝑗=1

2
+ 𝑤2𝑗 (𝑧𝑗 − 𝜁𝑗)

]

, 

d.h. man hat nicht nur zwei Wichtungsfaktoren (einen für jede Zustandsgröße), sondern 2 𝑙 (einen 
für jeden Datenpunkt einer Zustandsgröße). 

4.6.3 Der Fall zu berücksichtigender Messfehler 
Wenn zu den Datenpunkten Messfehler vorliegen, ist deren Berücksichtigung besonders dann 
wichtig, wenn einige Messwerte sehr große relative Fehler haben und daher bei der Minimierung von 
RSS weniger stark gewichtet werden sollen. Dies kann man durch folgende Wahl erreichen: 

𝑙
∑ [𝑤1𝑗 (𝑦𝑗 − 𝜈𝑗)
𝑗=1

2

2
+ 𝑤2𝑗 (𝑧𝑗 − 𝜁𝑗)

]

   mit  𝑤1𝑗 =

1
2  und 𝑤1𝑗 =
𝜎1𝑗

1
2 , 
𝜎2𝑗

wobei 𝜎1𝑗 der Fehler im Datenpunkt 𝑦𝑗 ist und 𝜎2𝑗 der Fehler im Datenpunkt 𝑧𝑗. 

4.7 Zusammenfassung 
In den letzten beiden Kapiteln haben wir Verfahren kennengelernt, mit denen man  

  phänomenologische (Kapitel 3) und  
  mechanistische Modelle (Kapitel 4)  

an Daten anpassen kann. In beiden Fällen finden wir auf diese Weise numerische Werte für die 
Parameter eines Modells. Bei phänomenologischen Modellen sind die Parameter zumeist 
Koeffizienten eines Polynoms (wie bei der linearen Regression) oder einer anderen „vorgegebenen“ 
Funktion (etwa die Sinus-Funktion im Beispiel der nichtlinearen Regression). Bei den mechanistischen 
Modellen ergibt sich die anzupassende Funktion als analytische Lösung eines prozess-basierten 
Modells (wie beim quorum sensing-Beispiel) oder als numerische Näherung einer solchen Lösung 
(wie bei den Beispielen des Zellwachstums und der Konkurrenz). 

Wir haben jeweils die Methode der kleinsten Quadrate benutzt und dabei die Summe der 
Abstandsquadrate minimiert. Es waren daher jeweils zwei Schritte zu erledigen:  

1.)  (a)  Vorgeben eines phänomenologischen Modells, d.h. einer Gleichung, oder  

(b)  Aufstellen und Lösen eines mechanistischen Modells; und 

2.)  Minimierung der Summe der Abstandsquadrate, häufig mit einem numerischen, iterativen 

Verfahren. 

Die Bestimmung der Parameterwerte eines Modells wird auch Parametrisierung genannt. Die 
Parametrisierung ist ein elementarer Schritt, um Modelle und Daten zusammenzubringen. 

 

 

4.8 Alternativer Ansatz  
In diesem letzten Abschnitt präsentieren wir einen alternativen Ansatz, um das logistische 
Wachstumsmodell an die Pantoffeltierchen-Daten von Gause (siehe Abschnitt 4.4.1) anzupassen. 
Dabei werden wir Werte für die Modellparameter 𝑟 und 𝐾 erhalten, ohne die logistische Differential-
gleichung  

𝑑𝑦
𝑑𝑡

= 𝑟𝑦 (1 −

𝑦
𝐾

) 

lösen (bzw. numerisch annähern) zu müssen. 

 

Relative Wachstumsraten 

Dieser Ansatz basiert auf dem folgenden Verständnis des logistischen Wachstumsmodells. Wenn 

𝑑𝑦
𝑑𝑡

 

1
die Wachstumsrate der Gesamtpopulation der Größe 𝑦 bezeichnet, ist 
𝑦

 

𝑑𝑦
𝑑𝑡

 die relative 

Wachstumsrate (manchmal auch pro-Kopf-Wachstumsrate genannt). 

Beispiel:  

Im unbeschränkten (exponentiellen) Wachstum, beschrieben durch 

ist die pro-Kopf-Wachstumsrate 

𝑑𝑦
𝑑𝑡

= 𝑟𝑦, 

1
𝑦

 

𝑑𝑦
𝑑𝑡

= 𝑟 

konstant, d.h. von der Populationsgröße 𝑦 unabhängig. Dies führt zu einer exponentiellen 
wachsenden Population.  

Beispiel: 

Im logistischen Wachstumsmodell hingegen ist die pro-Kopf-Wachstumsrate 

1
𝑦

 

𝑑𝑦
𝑑𝑡

= 𝑟 (1 −

𝑦
𝐾

). 

Sie nimmt linear mit der Populationsgröße 𝑦 ab. Für  𝑦 = 𝐾 ist die pro-Kopf-Wachstumsrate 
gleich Null, und für 𝑦 > 𝐾 negativ. Dies führt zum beschränkten Wachstum zu einer 
Kapazitätsgrenze. 

 

Lineare Regression 
Wir betrachten nun die beiden Seiten der obigen Gleichung. Wir fassen die linke Seite als relative 
Wachstumsrate auf, die wir aus den Daten von Gause berechnen. Die rechte Seite ist eine lineare 
Funktion mit den Parametern 𝑟 und 𝐾, die wir an diese Daten anpassen.  

D.h., im Grunde unternehmen wir eine einfache lineare Regression. Die Regressionskurve (rechte 
Seite) stammt aber aus der Annahme eines Modells. Als Daten verwenden wir nicht die 
Populationsdichten, sondern berechnen aus diesen die relative Wachstumsrate (linke Seite).  

Wie berechnen wir die relative Wachstumsrate aus den experimentellen Daten? Dazu verwenden wir 
die Näherung 

1
𝑦

 

𝑑𝑦
𝑑𝑡

=

1
𝑦

  lim
Δ𝑡→0

𝑦(𝑡 + Δ𝑡) − 𝑦(𝑡)

Δ𝑡

 

                  ≈

1
𝑦

 

𝑦(𝑡 + Δ𝑡) − 𝑦(𝑡)

Δ𝑡

=:

1
𝑦

Δ𝑦
Δ𝑡

, 

wobei wir Δ𝑦 ≔ 𝑦(𝑡 + Δ𝑡) − 𝑦(𝑡) setzen. Die Näherung gilt nur unter der Annahme, dass Δ𝑡 klein 
ist. 

Also gilt es, folgendes lineares Regressionsproblem zu lösen: 

wobei  

und 

𝑓 = 𝑚 𝑦 + 𝑏, 

𝑓 =

1
𝑦

Δ𝑦
Δ𝑡

 

𝑚 𝑦 + 𝑏 = 𝑟 (1 −

𝑦
𝐾

) =

−𝑟
𝐾

𝑦 + 𝑟. 

Zu bestimmen sind die Parameter 𝑚 und 𝑏, bzw. 

𝑟 = 𝑏    und     𝐾 =

−𝑟
𝑚

=

−𝑏
𝑚

. 

In MS Excel sieht das Ganze dann so aus: 

Beachten Sie, dass wir den letzten Datenpunkt für 𝑡 = 25 nicht verwenden können, da es für diesen 
kein 𝑦(𝑡 + Δ𝑡) gibt. Wir müssen außerdem die ersten beiden Datenpunkte ignorieren, da 𝑦(𝑡 = 2) 
fehlt. 

 

Das Bestimmtheitsmaß der linearen Regression beträgt 𝑅2 = 0,46.  

Aus 𝑚 = 0,0037 und 𝑏 = 0,755 berechnen wir: 

Ergebnis (lineare Regression): 

 

𝑟 = 0,75 und 𝐾 = 204,1 

Ergebnis (DGL-Modell, Abschnitt 4.4):  𝑟 = 0,92 und 𝐾 = 200,0 

Vorteil dieses alternativen Ansatzes:  

  Wir haben die Modellparameter bestimmt, indem wir einfach „nur“ eine lineare Regression 
durchgeführt haben, aber nicht die Differentialgleichung numerisch lösen mussten (z.B. mit 
dem Euler-Verfahren). 

Nachteile:  

  Wenn wir aber eine Vorhersage oder Simulation mit dem logistischen Wachstumsmodell 

machen möchten, müssten wir es immer noch lösen. 
Ist die Annahme gerechtfertigt, dass Δ𝑡 klein ist? 

 

Dieses alternative Verfahren scheint also gut dafür geeignet zu sein, wenn es in erster Linie um das 
„indirekte Messen“ geht. 

 

 

 

 

