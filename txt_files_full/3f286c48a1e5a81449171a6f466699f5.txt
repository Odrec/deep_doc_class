Tutorial IV

Jan Kirchner

Universit¨at Osnabrck

jkirchner@uos.de

November 13, 2014

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

1 / 23

Overview

1 Last homework(s)

Common mistakes - 3rd homework

2 Lecture III

Semantic Trees
Interdeﬁnability and Expressiveness

3 Current homework

Current homework

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

2 / 23

Last homework(s)

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

3 / 23

3rd homework - Common mistakes

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

4 / 23

Common mistakes

More structure in the truth tables!

Do all steps explicitly! i.e. write down every single step!

Checking for semantic equivalence includes the construction of the
respective wﬀ with a biconditional!

When translating, consult the guide for common translations

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

5 / 23

Semantic Trees

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

6 / 23

Deﬁnitions

Deﬁnition
A model of Φ is an assignment that satisﬁes Φ.

Deﬁnition
A counter-model of Φ is an assignment that does not satisfy Φ.

Deﬁnition
The semantic tree method is a graphical method to systematically
search for models of a sentence.

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

7 / 23

Example

((¬(A ∧ ¬B) ∧ (C → A)) ∧ C ) → B

Truth table, model, counter-model

A B C
1
1
0
1
1
1
1
0
1
0
0
0
0
1
0
0

1
1
0
0
1
1
0
0

(¬ (A ∧ ¬B) ∧ (C → A)) → B
1
1
1
1
1
0
0
1
1
1
1
1
1
1
0
1

0
0
1
1
0
0
0
0

1
1
1
1
0
1
0
1

0
0
1
1
0
0
1
1

1
1
0
0
0
1
0
1

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

8 / 23

Example

((¬(A ∧ ¬B) ∧ (C → A)) ∧ C ) → B

Truth table, model, counter-model

A B C
1
1
0
1
1
1
1
0
1
0
0
0
0
1
0
0

1
1
0
0
1
1
0
0

(¬ (A ∧ ¬B) ∧ (C → A)) → B
1
1
1
1
1
0
0
1
1
1
1
1
1
1
0 ← is CM
1

0
0
1
1
0
0
0
0

1
1
1
1
0
1
0
1

0
0
1
1
0
0
1
1

1
1
0
0
0
1
0
1

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

9 / 23

Examples

”It is not the case that Edward Snowden comes to Germany without
elucidating the NSA practices. Provided that Edward Snowden is
protected, he comes to Germany. Therefore, Edward Snowden elucidates
the NSA practices.”

A : Edward Snowden comes to Germany.

B : Edward Snowden elucidates the NSA practices.

C : Edward Snowden is protected.
(¬(A ∧ ¬B) ∧ (C → A)) → B

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

10 / 23

Examples

”It is not the case that Edward Snowden comes to Germany without
elucidating the NSA practices. Provided that Edward Snowden is
protected, he comes to Germany. Therefore, Edward Snowden elucidates
the NSA practices.”

A : Edward Snowden comes to Germany.

B : Edward Snowden elucidates the NSA practices.

C : Edward Snowden is protected.
(¬(A ∧ ¬B) ∧ (C → A)) → B

A counter-model is in this example the universe where ES does not
come to Germany, does not elucidate the NSA practices and ES is not
protected.

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

10 / 23

Subtleties

We don’t generally want to construct a truth table to ﬁnd
(counter-)models. Better use syntactic proof procedures/semantic
tree method.

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

11 / 23

Subtleties

We don’t generally want to construct a truth table to ﬁnd
(counter-)models. Better use syntactic proof procedures/semantic
tree method.

Φ is a tautology iﬀ it has no counter-models.

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

11 / 23

Subtleties

We don’t generally want to construct a truth table to ﬁnd
(counter-)models. Better use syntactic proof procedures/semantic
tree method.

Φ is a tautology iﬀ it has no counter-models.

Φ is a contradiction iﬀ it has no models.

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

11 / 23

Subtleties

We don’t generally want to construct a truth table to ﬁnd
(counter-)models. Better use syntactic proof procedures/semantic
tree method.

Φ is a tautology iﬀ it has no counter-models.

Φ is a contradiction iﬀ it has no models.
If ¬Φ is a contradiction, Φ is a tautology.

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

11 / 23

Subtleties

We don’t generally want to construct a truth table to ﬁnd
(counter-)models. Better use syntactic proof procedures/semantic
tree method.

Φ is a tautology iﬀ it has no counter-models.

Φ is a contradiction iﬀ it has no models.
If ¬Φ is a contradiction, Φ is a tautology.
If we can show that there is no model for ¬Φ, Φ is a tautology.

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

11 / 23

Semantic tree method

Method
To build the semantic tree of Φ, apply reduction rules until the truth
conditions of Φ are expressed in terms of the truth conditions of the
sentence letters or negated sentence letters of Φ.
There are 9 rules: DN, C, D, NC, ND, I, B, NI, NB. Each branch of
the tree corresponds to a model of Φ.

Method
¬Φ is a contradiction iﬀ, after complete reduction, every branch of the
tree contains at least one pair of contradictory truth-conditions, such as A
and ¬A.

An argument is valid iﬀ the corresponding inference conditional is
tautologous.

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

12 / 23

Semantic tree method

Method

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

13 / 23

Semantic tree method

Method

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

14 / 23

Examples

Determine by means of the semantic tree method for each of the following
argument scheme whether they are valid in Lprop or not.

B ↔ (¬C ∧ A), (A → C ) ∴ ¬B

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

15 / 23

Examples

Determine by means of the semantic tree method for each of the following
argument scheme whether they are valid in Lprop or not.

B ↔ (¬C ∧ A), (A → C ) ∴ ¬B
Inference conditional: (B ↔ (¬C ∧ A)) ∧ (A → C ) → ¬B

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

15 / 23

Examples

Determine by means of the semantic tree method for each of the following
argument scheme whether they are valid in Lprop or not.

B ↔ (¬C ∧ A), (A → C ) ∴ ¬B
Inference conditional: (B ↔ (¬C ∧ A)) ∧ (A → C ) → ¬B
Negated Inference conditional: ¬((B ↔ (¬C ∧ A)) ∧ (A → C ) → ¬B)

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

15 / 23

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

16 / 23

Interdeﬁnability and Expressiveness

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

17 / 23

Deﬁnitions

Deﬁnition
The sentential connectives are interdeﬁnable, that is, they can be deﬁned
in terms of each other.

The de Morgan’s laws are one famous example of interdeﬁned sentential
connectives - the logical and can be expressed in terms of the logical or
and the negation and vice versa.

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

18 / 23

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

19 / 23

Examples

Exercise: Transform the following formula featuring → and ∨ into a
formula featuring only ¬ and ∧:

((P ∨ Q) → R) → T

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

20 / 23

Examples

Exercise: Transform the following formula featuring → and ∨ into a
formula featuring only ¬ and ∧:

((P ∨ Q) → R) → T
(¬(¬P ∧ ¬Q) → R) → T

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

20 / 23

Examples

Exercise: Transform the following formula featuring → and ∨ into a
formula featuring only ¬ and ∧:

((P ∨ Q) → R) → T
(¬(¬P ∧ ¬Q) → R) → T
¬(¬(¬P ∧ ¬Q) ∧ ¬R) → T

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

20 / 23

Examples

Exercise: Transform the following formula featuring → and ∨ into a
formula featuring only ¬ and ∧:

((P ∨ Q) → R) → T
(¬(¬P ∧ ¬Q) → R) → T
¬(¬(¬P ∧ ¬Q) ∧ ¬R) → T
¬(¬(¬(¬P ∧ ¬Q) ∧ ¬R) ∧ ¬T )

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

20 / 23

Current homework

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

21 / 23

Keep in mind:

Rely on convention rather than gut feeling!

Read the exercise carefully!

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

22 / 23

The End

Jan Kirchner (UOS)

Tutorial I

November 13, 2014

23 / 23

