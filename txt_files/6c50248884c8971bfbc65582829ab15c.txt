Homework Assignment #5 jpirlet 956289; fbrieger 955734; mvischer 955764; jguese 954384

clear all;
close all;

% load input
load inputs.mat

% 1
%reshape and visualize
figure
inputs = cell(4);
for i = 1:4
    inputs{i} = reshape(Inputs(i,:),[7,7]);
    subplot(2,2,i)
    imagesc(inputs{i})
end

% 2
% generate random weights and choose learnig rate
weights = rand(49,2);
h = 0.01;

% 3a)
% train the weights 500 times (3-loop version)
for training = 1:500
    for input_neuron = 1:4

        y = [Inputs(input_neuron,:) * weights(:,1);
             Inputs(input_neuron,:) * weights(:,2)];

        for y_index = 1:size(y)

                yx(:,y_index) = y(y_index)*Inputs(input_neuron,:);

                blue(:,y_index) = y(y_index)...
                    * weights(:,1:y_index) * y(1:y_index);

        end
        dw = h * (yx(:,:) - blue(:,:));
        weights = weights + dw;
    end
end

% 3c)
% plot the outputs for all 4 inputs
figure
letters = ['H', 'A', 'I', 'J'];
all_Out = Inputs(:,:)*weights;
minimum = min(min(all_Out));
maximum = max(max(all_Out));
for i = 1:4
    subplot(2,2,i);

1

    title(letters(i));
    imagesc(all_Out(i,:), [minimum maximum]);
end

% 4a)
% plot the outputs for inputs M and T
figure
mt_Out = [M*weights; T*weights];
minimum = min(min(mt_Out));
maximum = max(max(mt_Out));
subplot(2,1,1);
title('M');
imagesc(mt_Out(1,:), [minimum maximum]);
subplot(2,1,2);
title('T');
imagesc(mt_Out(2,:), [minimum maximum]);

% 4b)
% plot the trained weights as a 7x7 grid
figure
subplot(1,2,1);
title('Weights neuron 1');
imagesc(reshape(weights(:,1), 7, 7));
subplot(1,2,2);
title('Weights neuron 2');
imagesc(reshape(weights(:,2), 7, 7));

2

