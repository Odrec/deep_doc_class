Table of Contents

homework_07.m .................................................................................................................  1
Preamble  ...........................................................................................................................   1
Task 1: Raster Plots & Peri-Stimulus Time Histogram ..............................................................  1
Task 2: Cross-Correlation ....................................................................................................  4

homework_07.m

% Group:
% Klaus-Michael Lux: 955998
% Philipp Noll: 955011
% Stefan Riegl: 956976
% Valerie Vogt: 955741

%

Preamble

% tidy up
close all
clear all

%

Task 1: Raster Plots & Peri-Stimulus Time His-
togram

% 1.1 load input file

load 'spiking.mat'

% 1.2 create raster plot

figure
hold on

% this may take some time, depending on machine
for i = 1:10
  px = [neuron(i).times'; neuron(i).times'];
  py = zeros(2, size(neuron(i).times));
  py(1,:)  = i - 0.5;
  py(2,:)  = i + 0.5;
  line(px, py)
end

1

title('Rasterplot for the first 10 trials')
xlabel('trials')
ylabel('time, 0 beginning of movement')

% 1.3.a create peri-stimulus time histogram

% we need these values for some math later
bin_min = -1;
bin_max = 1;
bin_count = 20;

bins = linspace(bin_min, bin_max, bin_count);
% save results of histc in a matrix an sum over one dimension later
ns = zeros(size(neuron, 2), bin_count);

for i = 1:size(neuron, 2)
  ns(i,:)  = histc(neuron(i).times, bins);
end

figure
% move bins a bit, so x values of bins match corresponding time
bar(bins + (bin_max - bin_min) / bin_count / 2, sum(ns, 1))
xlim([bin_min bin_max])
title('PSTH')
xlabel('time, 0 beginning of movement')
ylabel('spikes')

% 1.3.b description of neuron's behaviour

% Spike count increases around t=0. This means, the neuron gets active before
% the stimulus onset. :-O

%

Warning: Input arguments must be scalar. 
Warning: Input arguments must be scalar. 
Warning: Input arguments must be scalar. 
Warning: Input arguments must be scalar. 
Warning: Input arguments must be scalar. 
Warning: Input arguments must be scalar. 
Warning: Input arguments must be scalar. 
Warning: Input arguments must be scalar. 
Warning: Input arguments must be scalar. 
Warning: Input arguments must be scalar. 

2

3

Task 2: Cross-Correlation

% 2.1 load input files

load 'cell1.mat'
load 'cell2.mat'

% 2.2.a cross-correlation of averages ("..._ca")

[corr_ca, lag_ca] = xcorr(mean(st1, 1), mean(st2, 1), 'unbiased');

% 2.2.b average of cross-correlations ("..._ac")

% idea: iterate through all spike trains, get correlations for train, average
% corresponding correlations

% container for correlations for each train
corr_acs = zeros(size(st1, 1), size(st1, 2) * 2 - 1);

for i = 1:size(st1, 1)
  % since lag_ac equals for all iterations, we can securly aquire it later
  [corr, lag_ac] = xcorr(st1(i, :), st2(i,:) , 'unbiased');
  corr_acs(i,:)  = corr;
end

corr_ac = mean(corr_acs, 1);

% 2.3.a plot results

figure
plot(lag_ca, corr_ca, 'b', lag_ac, corr_ac, 'g')
legend('XCorr of avg activity', 'Avg XCorr of activity')
xlabel('lags')
ylabel('correlation')
title('Cross-correlations')

% 2.3.b comment on plot differences

% Due to the convolution performed by xcorr() the correlation of averages is
% much smoother. In contrast, the averaging correlations causes much more
% jittering of the y-value for each x.

% 2.3.c what the cross-correlation operation does

% The cross-correlation operation applies a convolution between two discrete
% functions and optionally a normalization. The functions are given as
% linearly spaced y-values (here: st1 and st1). A convolution can be imagened
% as "smoothening" of a function.

% 2.3.d relation between both neurons

% Both neurons seem to be correlated in a periodical manner. From the plot is seems
% that both neurons fire together every ~40ms (also before the onset at 0ms).

4

% For other moments (i.e. not at ..., -120ms, -80ms, ..., 0ms, ..., 120ms, ...)
% it is a bit more unlikely for both neurons to fire at the same time.

Published with MATLABÂ® 7.13

5

